//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kapsch.IS.EDP.WFActivity.ITAutomationWebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultObjectItem", Namespace="http://schemas.datacontract.org/2004/07/Kapsch.IS.ITAutomation.Webservice.Entitie" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ResultObjectItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Kapsch.IS.EDP.WFActivity.ITAutomationWebService.EnumErrorClassItem ErrorClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScriptRunIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Kapsch.IS.EDP.WFActivity.ITAutomationWebService.EnumStatusItem StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Kapsch.IS.EDP.WFActivity.ITAutomationWebService.EnumErrorClassItem ErrorClass {
            get {
                return this.ErrorClassField;
            }
            set {
                if ((this.ErrorClassField.Equals(value) != true)) {
                    this.ErrorClassField = value;
                    this.RaisePropertyChanged("ErrorClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScriptRunID {
            get {
                return this.ScriptRunIDField;
            }
            set {
                if ((this.ScriptRunIDField.Equals(value) != true)) {
                    this.ScriptRunIDField = value;
                    this.RaisePropertyChanged("ScriptRunID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Kapsch.IS.EDP.WFActivity.ITAutomationWebService.EnumStatusItem Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumErrorClassItem", Namespace="http://schemas.datacontract.org/2004/07/Kapsch.IS.ITAutomation.Webservice.Entitie" +
        "s.Enum")]
    public enum EnumErrorClassItem : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOT_DEFINED = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WS_NOTVALID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SCRIPT_NOTVALID = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SCRIPTCONTENT_NOTVALID = 30,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumStatusItem", Namespace="http://schemas.datacontract.org/2004/07/Kapsch.IS.ITAutomation.Webservice.Entitie" +
        "s.Enum")]
    public enum EnumStatusItem : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOT_DEFINED = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ORDERED = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INQUEUE = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERROR = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DONE = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DONE_WITH_ERRORS = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IN_PROCESS = 30,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ITAutomationWebService.IServiceITAutomation")]
    public interface IServiceITAutomation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceITAutomation/CreateScriptRun", ReplyAction="http://tempuri.org/IServiceITAutomation/CreateScriptRunResponse")]
        Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem CreateScriptRun(string taskName, string scriptDataEntries, string idClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceITAutomation/CreateScriptRun", ReplyAction="http://tempuri.org/IServiceITAutomation/CreateScriptRunResponse")]
        System.Threading.Tasks.Task<Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem> CreateScriptRunAsync(string taskName, string scriptDataEntries, string idClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceITAutomation/AddScriptData", ReplyAction="http://tempuri.org/IServiceITAutomation/AddScriptDataResponse")]
        Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem AddScriptData(int scriptRunID, string scriptDataEntries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceITAutomation/AddScriptData", ReplyAction="http://tempuri.org/IServiceITAutomation/AddScriptDataResponse")]
        System.Threading.Tasks.Task<Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem> AddScriptDataAsync(int scriptRunID, string scriptDataEntries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceITAutomation/QueueScript", ReplyAction="http://tempuri.org/IServiceITAutomation/QueueScriptResponse")]
        Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem QueueScript(int scriptRunID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceITAutomation/QueueScript", ReplyAction="http://tempuri.org/IServiceITAutomation/QueueScriptResponse")]
        System.Threading.Tasks.Task<Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem> QueueScriptAsync(int scriptRunID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceITAutomation/GetScriptRunStatus", ReplyAction="http://tempuri.org/IServiceITAutomation/GetScriptRunStatusResponse")]
        Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem GetScriptRunStatus(int scriptRunID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceITAutomation/GetScriptRunStatus", ReplyAction="http://tempuri.org/IServiceITAutomation/GetScriptRunStatusResponse")]
        System.Threading.Tasks.Task<Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem> GetScriptRunStatusAsync(int scriptRunID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceITAutomation/TestService", ReplyAction="http://tempuri.org/IServiceITAutomation/TestServiceResponse")]
        string TestService(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceITAutomation/TestService", ReplyAction="http://tempuri.org/IServiceITAutomation/TestServiceResponse")]
        System.Threading.Tasks.Task<string> TestServiceAsync(string value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceITAutomationChannel : Kapsch.IS.EDP.WFActivity.ITAutomationWebService.IServiceITAutomation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceITAutomationClient : System.ServiceModel.ClientBase<Kapsch.IS.EDP.WFActivity.ITAutomationWebService.IServiceITAutomation>, Kapsch.IS.EDP.WFActivity.ITAutomationWebService.IServiceITAutomation {
        
        public ServiceITAutomationClient() {
        }
        
        public ServiceITAutomationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceITAutomationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceITAutomationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceITAutomationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem CreateScriptRun(string taskName, string scriptDataEntries, string idClient) {
            return base.Channel.CreateScriptRun(taskName, scriptDataEntries, idClient);
        }
        
        public System.Threading.Tasks.Task<Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem> CreateScriptRunAsync(string taskName, string scriptDataEntries, string idClient) {
            return base.Channel.CreateScriptRunAsync(taskName, scriptDataEntries, idClient);
        }
        
        public Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem AddScriptData(int scriptRunID, string scriptDataEntries) {
            return base.Channel.AddScriptData(scriptRunID, scriptDataEntries);
        }
        
        public System.Threading.Tasks.Task<Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem> AddScriptDataAsync(int scriptRunID, string scriptDataEntries) {
            return base.Channel.AddScriptDataAsync(scriptRunID, scriptDataEntries);
        }
        
        public Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem QueueScript(int scriptRunID) {
            return base.Channel.QueueScript(scriptRunID);
        }
        
        public System.Threading.Tasks.Task<Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem> QueueScriptAsync(int scriptRunID) {
            return base.Channel.QueueScriptAsync(scriptRunID);
        }
        
        public Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem GetScriptRunStatus(int scriptRunID) {
            return base.Channel.GetScriptRunStatus(scriptRunID);
        }
        
        public System.Threading.Tasks.Task<Kapsch.IS.EDP.WFActivity.ITAutomationWebService.ResultObjectItem> GetScriptRunStatusAsync(int scriptRunID) {
            return base.Channel.GetScriptRunStatusAsync(scriptRunID);
        }
        
        public string TestService(string value) {
            return base.Channel.TestService(value);
        }
        
        public System.Threading.Tasks.Task<string> TestServiceAsync(string value) {
            return base.Channel.TestServiceAsync(value);
        }
    }
}
