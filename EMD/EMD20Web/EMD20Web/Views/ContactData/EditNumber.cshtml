@model Kapsch.IS.EMD.EMD20Web.Models.ContactModel
@using Kapsch.IS.EMD.EMD20Web.HelperExtensions
@using Kapsch.IS.EDP.Core.Entities
@{
    ViewBag.Title = "Edit Number";
    ViewBag.TooltipUrl = Request.Url.Scheme + "://" + Request.Url.Authority + "/Quickinfo/EditNumber_Edit.html";
}

@Html.Partial("~/Views/Shared/Javascript/_TooltipMetaData.cshtml")

<div id="formcontent">
    @using (Ajax.BeginForm("EditNumber", "ContactData", null, new AjaxOptions
    {
        HttpMethod = "Post",
        OnBegin = "formValidation.OnBegin(xhr)",
        OnSuccess = "contactData.Events.OnFormValidationEditNumberSuccess(xhr)",
        OnFailure = "formValidation.OnFailure(xhr)"
    }))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.ValidFrom)
        @Html.HiddenFor(model => model.ValidTo)
        @Html.HiddenFor(model => model.ActiveTo)
        @Html.HiddenFor(model => model.Guid)
        @Html.HiddenFor(model => model.CT_Guid)
        @Html.HiddenFor(model => model.EP_Guid)
        @Html.HiddenFor(model => model.P_Guid)
        @Html.HiddenFor(model => model.E_Guid)
        @Html.HiddenFor(model => model.L_Guid)
        @Html.HiddenFor(model => model.C_ID)
        @Html.HiddenFor(model => model.C_EP_ID)
        @Html.HiddenFor(model => model.C_E_ID)
        @Html.HiddenFor(model => model.C_P_ID)
        @Html.HiddenFor(model => model.C_CT_ID)
        @Html.HiddenFor(model => model.ACDDisplay)

        <div id="formresults" class="infobox error" style="display:none"></div>

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="k-edit-form-container" style="float:left;">


                @if (Model.C_CT_ID == ContactTypeHandler.MOBILE || Model.C_CT_ID == ContactTypeHandler.PHONE || Model.C_CT_ID == ContactTypeHandler.MOBILE || Model.C_CT_ID == ContactTypeHandler.EFAX)
                {
                    <div class="form-group">
                        @Html.LabelForRequired(model => model.NationalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.NationalCode, new { @class = "k-textbox k-valid", @placeholder = "e.g. +43" })
                            @Html.ValidationMessageFor(model => model.NationalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                <div class="form-group">
                    @Html.LabelForRequired(model => model.Prefix, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Prefix, new { @class = "k-textbox k-valid", @placeholder = "e.g. 676" })
                        @Html.ValidationMessageFor(model => model.Prefix, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelForRequired(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Number, new { @class = "k-textbox k-valid", @placeholder = "e.g. 7778899" })
                        @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelForRequired(model => model.IsVisibleInCallCenter, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.IsVisibleInCallCenter, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IsVisibleInCallCenter, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelForRequired(model => model.IsVisibleInPhoneBook, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.IsVisibleInPhoneBook, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IsVisibleInPhoneBook, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (Model.IsFuture)
                {
                    <div class="form-group">
                        @Html.LabelForRequired(model => model.ActiveFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @(Html.Kendo().DatePicker()
                                    .Name("ActiveFrom")
                                    .Format("dd.MM.yyyy")
                                    .Min(Kapsch.IS.EMD.EMD20Web.Models.ContactModel.GetFutureDate())
                            )
                            @Html.ValidationMessageFor(model => model.ActiveFrom, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                <div class="form-group form-group-buttons">
                    <label></label>
                    <div class="col-md-10">

                        <button type="button" value="Cancel" class="k-button kapsch-text-button" onclick="closeWindow();">Cancel</button>
                        <input type="submit" value="Save" class="btn k-button kapsch-text-button" />
                    </div>
                </div>
            </div>
        </div>
    }
</div>


<script>
    $(function () {
        $("form").kendoValidator();
    });
</script>