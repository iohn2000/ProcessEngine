@model Kapsch.IS.EMD.EMD20Web.Models.AdvancedSearchModel
@using Kapsch.IS.EMD.EMD20Web.Models;
@using Kapsch.IS.EMD.EMD20Web.HelperExtensions

@{
    ViewBag.Title = "Advanced Search";
    ViewBag.Identifier = "AdvancedSearch";
    ViewBag.TooltipUrl = Request.Url.Scheme + "://" + Request.Url.Authority + "/Quickinfo/AdvancedSearch.html";
}

@Html.Partial("~/Views/Shared/Javascript/_TooltipMetaData.cshtml")


@using (Html.BeginForm("Search", "AdvancedSearch"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.SearchStringIsGuid)

    <br />
    <div id="formcontent" style="height: 230px">
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="k-edit-form-container" id="advancedSearch" style="float:left; position: initial !important">

                <div class="form-group">
                    @Html.LabelForRequired(model => model.SearchString, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SearchString)
                        @Html.ValidationMessageFor(model => model.SearchString, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelForRequired(model => model.SelectedEntity, htmlAttributes: new { @class = "control-label col-md-2" })
                    @*@Html.CheckBoxFor(model => model.SearchStringIsGuid)*@
                    <div class="col-md-10">
                        @(
                                Html.Kendo().DropDownListFor(m => m)
                                .OptionLabel("Please select")
                                .Name("SelectedEntity")
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .HtmlAttributes(new { @style = "width:500px" })
                                .Filter(FilterType.Contains)
                                .IgnoreCase(true)
                                .AutoBind(true)
                                .HtmlAttributes(new { data_required = "required" })
                                .BindTo(Model.AvailableEntities)
                                .Events(ev => ev.Change("advancedsearch.Events.OnChangeEntity"))
                        )
                        @Html.ValidationMessageFor(model => model.SelectedEntity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="DivStartDate">
                    @Html.LabelForRequired(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @(Html.Kendo().DatePicker()
                                .Name("StartDate")
                                .Format("dd.MM.yyyy")
                                .Value(DateTime.Now)
                                .HtmlAttributes(new { style = "width: 100%" })
                        )
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                    <div id="area-startDate" style="display:none">
                        <div style="float:left; padding: 3px; width: auto"><i class="material-icons" data-role="tooltip">info</i></div>
                        <div id="area-startDate-Text" style="float:left; width: 250px; display:inline">Search for created-date</div>
                    </div>
                </div>

                <div class="form-group" id="DivEndDate">
                    @Html.LabelForRequired(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @(Html.Kendo().DatePicker()
                            .Name("EndDate")
                            .Format("dd.MM.yyyy")
                            .Value(DateTime.Now)
                            .HtmlAttributes(new { style = "width: 100%" })
                        )
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                    <div id="area-endDate" style="display:none">
                        <div style="float:left; padding: 3px; width: auto"><i class="material-icons" data-role="tooltip">info</i></div>
                        <div id="area-endDate-Text" style="float:left; width: 250px; display:inline">Search for created-date</div>
                    </div>
                </div>

                <div class="form-group form-group-buttons" style="margin-top:10px">
                    <label></label>
                    <div class="col-md-10">
                        <input type="button" value="Search" class="btn k-button" onclick="advancedsearch.Functions.SubmitForm();" />
                    </div>
                </div>

                <br /><br />

            </div>
        </div>
    </div>

}

<div id="itemcontainer">
    <div id="Grid"></div>
    <div id="GridEnterprise"></div>
    <div id="GridLocation"></div>
    <div id="GridAccount"></div>
    <div id="GridUser"></div>
    <div id="GridProcessEntity"></div>
</div>



<script>

    var validator;
    $(function () {
        validator = $("form").kendoValidator().data("kendoValidator");
    });

    $(document).ready(function () {
        // Employment
        $("#Grid").kendoGrid({
            dataSource: {
                type: "jsonp",
                transport: {
                    read: {
                        url: "/AdvancedSearch/SearchEmployment",
                        //data: getSearchInputData
                        data: advancedsearch.Functions.getSearchInputData
                    }
                },
                serverPaging: true,
                serverFiltering: false,
                serverSorting: false,
                ajax: true,
                schema: {
                    data: 'Data',
                    total: 'Total',
                    errors: 'Errors',
                }
            },
            dataBound: advancedsearch.Functions.OnDataBound,
            dataBinding: advancedsearch.Functions.OnDataBinding,
            autoBind: false,
            filterable: {
                mode: "row"
            },
            //height: "auto",
            sortable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5,
                pageSize: 10
            }
           ,
            columns: [
            {
                field: "PERS_Guid",
                title: "&nbsp;",
                template: "<a title='View' onclick='showInWindow(\"/PersonProfile/Profile/#: PERS_Guid #/true?empl_guid=#: EMPL_Guid #\",\"View\");'><i class='material-icons'>pageview</i></a>",
                filterable: false,
                width: 40,
            },
            { width: 400, field: "FamilyName", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "FirstName", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "PersNr", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "UserID", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "EP_ID", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "P_ID", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            {
                field: "Entry", type: "date", format: "{0:dd.MM.yyyy}",
                filterable: {
                    cell: {
                        showOperators: true, suggestionOperator: "eq",
                        template: function (args) {
                            args.element.kendoDatePicker({ format: "dd.MM.yyyy" });
                        }
                    }
                }
            },
            {
                field: "FirstWorkDay", type: "date", format: "{0:dd.MM.yyyy}",
                filterable: {
                    cell: {
                        showOperators: true, suggestionOperator: "eq",
                        template: function (args) {
                            args.element.kendoDatePicker({ format: "dd.MM.yyyy" });
                        }
                    }
                }
            },
            {
                field: "LastDay", type: "date", format: "{0:dd.MM.yyyy}",
                filterable: {
                    cell: {
                        showOperators: true, suggestionOperator: "eq",
                        template: function (args) {
                            args.element.kendoDatePicker({ format: "dd.MM.yyyy" });
                        }
                    }
                }
            },
            {
                field: "Exit", type: "date", format: "{0:dd.MM.yyyy}",
                filterable: {
                    cell: {
                        showOperators: true, suggestionOperator: "eq",
                        template: function (args) {
                            args.element.kendoDatePicker({ format: "dd.MM.yyyy" });
                        }
                    }
                }
            }
            ]
        });


        //Enterprise Grid
        $("#GridEnterprise").kendoGrid({
            dataSource: {
                type: "jsonp",
                transport: {
                    read: {
                        url: "/AdvancedSearch/SearchEnterprise",
                        data: advancedsearch.Functions.getSearchInputData
                    }
                },
                serverPaging: false,
                serverFiltering: false,
                serverPaging: false,
                serverSorting: false
                //schema: {
                //    data: 'Data',
                //    total: 'Total',
                //    errors: 'Errors',
                //    model: {
                //        id: "Guid",
                //        fields: {
                //            Guid: { type: "string" },
                //            ActiveFrom: { type: "date" },
                //            ActiveTo: { type: "date" }
                //        }
                //    }
                //}
            },
            dataBound: advancedsearch.Functions.OnDataBound,
            dataBinding: advancedsearch.Functions.OnDataBinding,
            autoBind: false,
            filterable: {
                mode: "row"
            },
            //height: 550,
            sortable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5,
                pageSize: 10
            }
           ,
            columns: [
            {
                field: "Guid",
                title: "Action",
                template:
                    "<a title='View' onclick='showInWindow(\"/Enterprise/View/#: Guid #/true\",\"Enterprise (View only)\");'><i class='material-icons'>pageview</i></a>"
                    + "# if (CanManage == true) { #"
                    + "<a title='Manage' onclick='showInWindow(\"/Enterprise/Manage/true?Guid=#: Guid #\",\"Manage Enterprise\");'><i class='material-icons'>view_list</i></a>"
                    + "#} #",

                width: 130,
                filterable: false
            },
            { field: "NameShort", title: "Name Short", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "NameLong", title: "Name Long", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } }, width: 400 },
            { field: "E_ID_new", title: "E_ID", filterable: { cell: { showOperators: false, suggestionOperator: "eq" } } },
            { field: "E_ID_Parent", filterable: { cell: { showOperators: false, suggestionOperator: "eq" } } },
            { field: "E_ID_Root", filterable: { cell: { showOperators: false, suggestionOperator: "eq" } } },
            { field: "O_ID_Dis", title: "Disciplinary OrgUnit", filterable: { cell: { showOperators: false, suggestionOperator: "eq" } } },
            {
                field: "ActiveFrom", title: "Active From", type: "date", format: "{0:dd.MM.yyyy}",
                filterable: {
                    cell: {
                        showOperators: true, suggestionOperator: "eq",
                        template: function (args) {
                            args.element.kendoDatePicker({ format: "dd.MM.yyyy" });
                        }
                    }
                }
            },
            {
                field: "ActiveTo", title: "Active To", type: "date", format: "{0:dd.MM.yyyy}",
                filterable: {
                    cell: {
                        showOperators: true, suggestionOperator: "eq",
                        template: function (args) {
                            args.element.kendoDatePicker({ format: "dd.MM.yyyy" });
                        }
                    }
                }
            }
            ]
        });


        //Location Grid
        $("#GridLocation").kendoGrid({
            dataSource: {
                type: "jsonp",
                transport: {
                    read: {
                        url: "/AdvancedSearch/SearchLocation",
                        data: advancedsearch.Functions.getSearchInputData
                    }
                },
                serverPaging: false,
                serverFiltering: false,
                serverPaging: false,
                serverSorting: false
            },
            dataBound: advancedsearch.Functions.OnDataBound,
            dataBinding: advancedsearch.Functions.OnDataBinding,
            autoBind: false,
            filterable: {
                mode: "row"
            },
            //height: 550,
            sortable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5,
                pageSize: 10
            }
           ,
            columns: [
            {
                field: "Guid",
                title: "Action",
                template: "<a title='View' onclick='showInWindow(\"/Location/View/#: Guid #/true\",\"Location (View only)\");'><i class='material-icons'>pageview</i></a>"
                    + "# if (CanManage == true) { #"
                    + "<a title='Manage' onclick='showInWindow(\"/Location/Manage/true?Guid=#: Guid #\",\"Manage Location\");'><i class='material-icons'>view_list</i></a>"
                    + "#} #",
                width: 130,
                filterable: false
            },
            { field: "Name", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "EL_ID", title: "EL_ID", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "Street", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "City", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "ZipCode", title: "Zip code", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            {
                field: "ActiveFrom", title: "Active from", type: "date", format: "{0:dd.MM.yyyy}",
                filterable: {
                    cell: {
                        showOperators: true, suggestionOperator: "eq",
                        template: function (args) {
                            args.element.kendoDatePicker({ format: "dd.MM.yyyy" });
                        }
                    }
                }
            },
            {
                field: "ActiveTo", title: "Active to", type: "date", format: "{0:dd.MM.yyyy}",
                filterable: {
                    cell: {
                        showOperators: true, suggestionOperator: "eq",
                        template: function (args) {
                            args.element.kendoDatePicker({ format: "dd.MM.yyyy" });
                        }
                    }
                }
            }
            ]
        });

        //Account Grid
        $("#GridAccount").kendoGrid({
            dataSource: {
                type: "jsonp",
                transport: {
                    read: {
                        url: "/AdvancedSearch/SearchAccount",
                        data: advancedsearch.Functions.getSearchInputData
                    }
                },
                serverPaging: false,
                serverFiltering: false,
                serverPaging: false,
                serverSorting: false
            },
            dataBound: advancedsearch.Functions.OnDataBound,
            dataBinding: advancedsearch.Functions.OnDataBinding,
            autoBind: false,
            filterable: {
                mode: "row"
            },
            //height: 550,
            sortable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5,
                pageSize: 10
            }
           ,
            columns: [
            {
                field: "Guid",
                title: "Action",
                template: "<a title='View' onclick='showInWindow(\"/Costcenter/View/#: Guid #/true\",\"Costcenter (View only)\");'><i class='material-icons'>pageview</i></a>"
                    + "# if (CanManage == true) { #"
                    + "<a title='Manage' onclick='showInWindow(\"/Costcenter/Manage/true?Guid=#: Guid #\",\"Manage Costcenter\");'><i class='material-icons'>view_list</i></a>"
                    + "#} #",
                width: 130,
                filterable: false
            },
            { field: "Name", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "KstID", title: "Cost center ID", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "ResponsibleName", title: "Responsible Name", filterable: { cell: { showOperators: false, suggestionOperator: "eq" } } },
            {
                field: "ActiveFrom", title: "Active from", type: "date", format: "{0:dd.MM.yyyy}",
                filterable: {
                    cell: {
                        showOperators: true, suggestionOperator: "eq",
                        template: function (args) {
                            args.element.kendoDatePicker({ format: "dd.MM.yyyy" });
                        }
                    }
                }
            },
            {
                field: "ActiveTo", title: "Active to", type: "date", format: "{0:dd.MM.yyyy}",
                filterable: {
                    cell: {
                        showOperators: true, suggestionOperator: "eq",
                        template: function (args) {
                            args.element.kendoDatePicker({ format: "dd.MM.yyyy" });
                        }
                    }
                }
            }
            ]
        });

        // ProcessEntity Grid
        $("#GridUser").kendoGrid({
            dataSource: {
                type: "jsonp",
                transport: {
                    read: {
                        url: "/AdvancedSearch/SearchUser",
                        data: advancedsearch.Functions.getSearchInputData
                    }
                },
                serverPaging: false,
                serverFiltering: false,
                serverPaging: false,
                serverSorting: false
            },
            dataBound: advancedsearch.Functions.OnDataBound,
            dataBinding: advancedsearch.Functions.OnDataBinding,
            autoBind: false,
            filterable: {
                mode: "row"
            },
            sortable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5,
                pageSize: 10
            },
            columns: [
            {
                field: "Guid",
                title: "Action",
                template: "<a title='View User' onclick='showInWindow(\"/User/View/#= Guid #/true\",\"User (View only)\");'><i class='material-icons'>pageview</i></a>&nbsp;<a title='View Person Profile' onclick='showInWindow(\"/PersonProfile/Profile/#: PERS_Guid #/true?empl_guid=#: EMPL_Guid #\",\"Person Profile\");'><i class='material-icons'>view_list</i></a>",
                width: 80,
                filterable: false
            },
            { field: "Username", title: "User ID", filterable: { cell: { operator: "contains" } } },
            { field: "Domain", filterable: { cell: { operator: "contains" } } },
            { field: "UserTypeDisplayName", title: "Usertype", filterable: { cell: { operator: "contains" } } },
            { field: "StatusDisplayName", title: "Status", filterable: { cell: { operator: "contains" } } },
            { field: "ActiveFrom", title: "Active from", type: "date", filterable: { cell: { operator: "eq" } }, template: '#= kendo.toString(ActiveFrom,"dd.MM.yyyy") #' },
            { field: "ActiveTo", title: "Active to", type: "date", filterable: { cell: { operator: "eq" } }, template: '#= kendo.toString(ActiveTo,"dd.MM.yyyy") #' }
            ]
        });

        //Process Entity Grid
        // http://developer.telerik.com/featured/exporting-data-ease-using-kendo-ui-grid/
        // http://docs.telerik.com/kendo-ui/controls/data-management/grid/how-to/excel/export-checked-columns-only
        $("#GridProcessEntity").kendoGrid({
            toolbar: ["excel"],
            excel: {
                fileName: "Processes.xlsx",
                allPages: true,
                filterable: true
            },
            dataSource: {
                type: "jsonp",
                transport: {
                    read: {
                        url: "/AdvancedSearch/SearchProcessEntity",
                        data: advancedsearch.Functions.getSearchInputData
                    }
                },
                serverPaging: false,
                serverFiltering: false,
                serverPaging: false,
                serverSorting: false
            },
            dataBound: advancedsearch.Functions.OnDataBound,
            dataBinding: advancedsearch.Functions.OnDataBinding,
            autoBind: false,
            filterable: {
                mode: "row"
            },
            //height: "auto",
            sortable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5,
                pageSize: 10
            },
            columns: [
            {
                field: "Guid",
                title: "Action",
                template:
                    "# if (ShowActionLinkView == true) { #"
                    + "<a title='View' onclick='showInWindow(\"#: ActionLinkView #\",\"#: ActionLinkViewPopupTitle #\");'><i class='material-icons'>pageview</i></a>"
                    + "#} #"
                    + "# if (ShowActionLinkManage == true) { #"
                    + "<a title='Manage' onclick='showInWindow(\"#: ActionLinkManage #\",\"#: ActionLinkManagePopupTitle #\");'><i class='material-icons'>view_list</i></a>"
                    + "#} #",
                //+ "# if (CanManage == true) { #"
                //+ "<a title='Manage' onclick='showInWindow(\"/Enterprise/Manage/true?Guid=#: Guid #\",\"Manage Enterprise\");'><i class='material-icons'>view_list</i></a>"
                //+ "#} #",

                width: 130,
                filterable: false
            },
            { field: "WFD_Name", width: 250, title: "Definition Name", filterable: { cell: { showOperators: false, suggestionOperator: "eq" } } },
            { field: "RequestorName", width: 250, title: "Requestor", filterable: { cell: { showOperators: false, suggestionOperator: "eq" } } },
            { field: "EffectedPersonName", width: 250, title: "Effected", filterable: { cell: { showOperators: false, suggestionOperator: "eq" } } },
            { field: "EntityGuid", width: 350, title: "EntityGuid", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "EntityName", width: 250, title: "Type", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "WFI_ID", width: 250, title: "Instance ID", filterable: { cell: { showOperators: false, suggestionOperator: "contains" } } },
            { field: "WFResultMessages", width: 250, title: "Messages", filterable: { cell: { showOperators: false, suggestionOperator: "eq" } } },
            {
                field: "WFStartTime", title: "Start Time", type: "date", format: "{0:dd.MM.yyyy HH:mm}",
                filterable: {
                    cell: {
                        showOperators: true, suggestionOperator: "eq",
                        template: function (args) {
                            args.element.kendoDatePicker({ format: "dd.MM.yyyy HH:mm" });
                        }
                    }
                },
                width: 250
            },         
            {
                field: "WFTargetDate", title: "Target Date", type: "date", format: "{0:dd.MM.yyyy}",
                filterable: {
                    cell: {
                        showOperators: true, suggestionOperator: "eq",
                        template: function (args) {
                            args.element.kendoDatePicker({ format: "dd.MM.yyyy" });
                        }
                    }
                },
                width: 250
            },
            { field: "StatusString", width: 200, title: "Status", filterable: { cell: { showOperators: false, suggestionOperator: "eq" } } },
            {
                field: "Created", title: "Created", type: "date", format: "{0:dd.MM.yyyy}",
                filterable: {
                    cell: {
                        showOperators: true, suggestionOperator: "eq",
                        template: function (args) {
                            args.element.kendoDatePicker({ format: "dd.MM.yyyy" });
                        }
                    }
                },
                width: 250
            },
            {
                field: "Modified", title: "Modified", type: "date", format: "{0:dd.MM.yyyy}",
                filterable: {
                    cell: {
                        showOperators: true, suggestionOperator: "eq",
                        template: function (args) {
                            args.element.kendoDatePicker({ format: "dd.MM.yyyy" });
                        }
                    }
                },
                width: 250
            }
            ]
        });

        $("#Grid").hide();
        $("#GridEnterprise").hide();
        $("#GridLocation").hide();
        $("#GridAccount").hide();
        $("#GridUser").hide();
        $("#GridProcessEntity").hide();

        $('#SearchString').keypress(function (e) {
            var key = e.which;
            if (key == 13)  // the enter key code
            {
                advancedsearch.Functions.SubmitForm();
            }
        });

        $("form").kendoValidator();

        $("#SelectedEntity").prop('required', 'required');
        $("#SelectedEntity").attr('required', 'required');
        $("#SelectedEntity").prop('data-val-required', 'Required field');
        $("#SelectedEntity").attr('data-val-required', 'Required field');
    });




    $('#SearchString').keyup(function () {
        advancedsearch.Functions.CheckForEntityGuid($(this).val());
    });
</script>

<script src="~/Scripts/Views/Shared/formValidation.js" type="text/javascript"></script>
