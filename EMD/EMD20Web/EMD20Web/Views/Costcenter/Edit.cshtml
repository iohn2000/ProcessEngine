@model Kapsch.IS.EMD.EMD20Web.Models.AccountModel
@using Kapsch.IS.EMD.EMD20Web.Models
@using Kapsch.IS.EMD.EMD20Web.HelperExtensions
@{
    ViewBag.Title = "Edit Costcenter";
    ViewBag.TooltipUrl = Request.Url.Scheme + "://" + Request.Url.Authority + "/Quickinfo/Costcenter_Edit.html";
}

@Html.Partial("~/Views/Shared/Javascript/_TooltipMetaData.cshtml")

<div id="formcontent">
    @using (Ajax.BeginForm("Edit", "Costcenter", null, new AjaxOptions
    {
        HttpMethod = "Post",
        OnBegin = "formValidation.OnBegin(xhr)",
        OnSuccess = "formValidation.OnSuccess(xhr)",
        OnFailure = "formValidation.OnFailure(xhr)"        
    }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Guid)
        @Html.HiddenFor(model => model.AC_ID)
        @Html.HiddenFor(model => model.MainOrgUnit)
        @Html.HiddenFor(model => model.ValidFrom)
        @Html.HiddenFor(model => model.ValidTo)
        @Html.HiddenFor(model => model.ActiveFrom)
        @Html.HiddenFor(model => model.ActiveTo)

        @*if(!string.IsNullOrEmpty(Model.Guid))
            {
                @Html.HiddenFor(model => model.E_Guid)
            }*@

    for (int i = 0; i < Model.ConfiguredGroups.Count; i++)
    {
        <input data-val="true" identifier="@Model.ConfiguredGroups[i].Value" type="hidden" class="k-valid" itemtype="group" id="ConfiguredGroups[@i].Text" name="ConfiguredGroups[@i].Text" value="@Model.ConfiguredGroups[i].Text">
        <input data-val="true" identifier="@Model.ConfiguredGroups[i].Value" type="hidden" class="k-valid" itemtype="group" id="ConfiguredGroups[@i].Value" name="ConfiguredGroups[@i].Value" value="@Model.ConfiguredGroups[i].Value">
    }


    @*@Html.HiddenFor(model => model.ConfiguredGroups[0])*@

        <div id="formresults" class="infobox error" style="display:none"></div>

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="k-edit-form-container" style="float:left;">

                <div class="form-group">
                    @Html.LabelForRequired(model => model.E_Guid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Partial("Controls/_TextValuePopupSelectionView", Model.EnterpriseSelection)
                        @Html.ValidationMessageFor(model => model.E_Guid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelForRequired(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelForRequired(model => model.KstID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.KstID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.KstID, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelForRequired(model => model.Responsible, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Partial("Controls/_TextValuePopupSelectionView", Model.ResponsibleSelection)
                        @Html.ValidationMessageFor(model => model.Responsible, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div>

                </div>
            </div>



            <div style="clear:both;  "></div>

            <!-- Group Mapping Start -->
            <div class="form-group" style="margin-left: 5px; margin-top: 30px; width: 100%">
                <div style="width: 40%; float: left;">

                    @if (!string.IsNullOrEmpty(Model.Guid))
                    {
                        @(
                        Html.Kendo().Grid(Model.AvailableGroups)
                            .Name("AvailableGroups")
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Sort(a => a.Add("Text"))
                                .Events(events => events.Error("exceptionManager.Events.HandleError"))
                                .ServerOperation(false)
                             )
                             .HtmlAttributes(new { @class = "k-grid-list k-grid-selectable", style = "height: 300px" })

                             .Columns(columns =>
                             {

                                 columns.Bound(item => item.Text).Title("Available Groups").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains).ShowOperators(false).Template("kendoHelper.DisableAutocompleteFilter"))).Sortable(true);

                             })
                            .Filterable(filterable => filterable.Mode(GridFilterMode.Row).Enabled(true))
                             .Sortable(sortable => sortable.Enabled(true))
                            .Pageable(p => p.Enabled(false))
                            .Scrollable(s => s.Enabled(true))
                                .Selectable(selectable => selectable
                                .Mode(GridSelectionMode.Multiple)
                            )

                        )
                    }
                    else
                    {
                        @(
                        Html.Kendo().Grid(Model.AvailableGroups)
                            .Name("AvailableGroups")
                            .DataSource(dataSource => dataSource
                                .Ajax().ServerOperation(true)
                                                        .Read(read =>
                                                        {
                                                            read.Action("ReadAvailableGroups", "Costcenter").Data("costcenter.Data.AvailableGroupParameters");
                                                        })
                                .Sort(a => a.Add("Text"))
                                .Events(events => events.Error("exceptionManager.Events.HandleError"))
                             )
                             .HtmlAttributes(new { @class = "k-grid-list k-grid-selectable", style = "height: 300px" })

                             .Columns(columns =>
                             {

                                 columns.Bound(item => item.Text).Title("Available Groups").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains).ShowOperators(false))).Sortable(true);

                             })
                            .Filterable(filterable => filterable.Mode(GridFilterMode.Row).Enabled(true))
                             .Sortable(sortable => sortable.Enabled(true))
                            .Pageable(p => p.Enabled(false))
                            .Scrollable(s => s.Enabled(true))
                                .Selectable(selectable => selectable
                                .Mode(GridSelectionMode.Multiple)
                            )

                        )
                    }

                </div>


                <div style="float:left;  margin-left: 30px; margin-top: 30px">
                    <button name="buttonToLeft" id="buttonToLeft" class="btn k-button kapsch-text-button" type="button" onclick="costcenter.Events.OnClickRemoveGroup()" style="margin: 0; height: 34px; padding: 7px"><i class="material-icons">arrow_back</i></button>
                    <button name="buttonToRight" id="buttonToRight" class="btn k-button kapsch-text-button" type="button" onclick="costcenter.Events.OnClickAddGroup()" style="margin: 0; height: 34px; padding: 7px"><i class="material-icons">arrow_forward</i></button>
                </div>

                <div class="form-group1" style="float:left;  width: 40%; margin-left: 30px">
                    @(Html.Kendo().Grid(Model.ConfiguredGroups)
                        .Name("ConfiguredGroups")
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .ServerOperation(false)
                            .Sort(a => a.Add("Text"))
                            .Events(events => events.Error("exceptionManager.Events.HandleError"))
                         )
                         .HtmlAttributes(new { @class = "k-grid-list", style = "height: 300px" })
                         .Columns(columns =>
                         {

                             columns.Bound(item => item.Text).Title("Attached Groups").Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains).ShowOperators(false).Template("kendoHelper.DisableAutocompleteFilter"))).Sortable(true);

                         })
                        .Filterable(filterable => filterable.Mode(GridFilterMode.Row).Enabled(true))
                        .Sortable(sortable => sortable.Enabled(true))
                        .Pageable(p => p.Enabled(false))
                        .Scrollable(s => s.Enabled(true))
                        .Selectable(selectable => selectable.Enabled(true).Mode(GridSelectionMode.Multiple))

                    )
                </div>




            </div>

            <div style="clear: both; width: 100%; "></div>
            <div class="k-edit-form-container" style="float:left;">
                <div class="form-group form-group-buttons">
                    <label></label>
                    <div class="col-md-10">
                        <button type="button" value="Cancel" class="k-button kapsch-text-button" onclick="closeWindow();">Cancel</button>
                        <input type="submit" value="Save" class="btn k-button kapsch-text-button" />

                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script>
    $(function () {
        $("form").kendoValidator();
    });

    $(document).on("keypress", "form", function (event) {
        return event.keyCode != 13;
    });

    $(document).ready(function () {

        @Html.Partial("ErrorHandling/ModalErrorWindowCheckForError")


        $("#AvailableGroups").dblclick(function () {
            costcenter.Functions.MoveSelectedItems("#AvailableGroups", "#ConfiguredGroups");
        });

        $("#ConfiguredGroups").dblclick(function () {
            costcenter.Functions.MoveSelectedItems("#ConfiguredGroups", "#AvailableGroups");
        });

    });

</script>