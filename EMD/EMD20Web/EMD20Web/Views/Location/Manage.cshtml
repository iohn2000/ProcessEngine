@model Kapsch.IS.EMD.EMD20Web.Models.Location.ManageLocationModel
@using Kapsch.IS.EMD.EMD20Web.Models;
@{
    ViewBag.Title = "Locations";
    ViewBag.TooltipUrl = Request.Url.Scheme + "://" + Request.Url.Authority + "/Quickinfo/Location_Manage.html";
}

@Html.Partial("~/Views/Shared/Javascript/_TooltipMetaData.cshtml")


@if (Model.CanView || Model.CanManage)
{
    @(Html.Kendo().Grid<LocationModel>()
                .Name("Grid").HtmlAttributes(new { @class = "k-grid-big" })

                .Sortable()
                .Filterable(filterable => filterable.Mode(GridFilterMode.Row).Enabled(true))
                    .Pageable(pageable => pageable
                    .Refresh(true)
                    .PageSizes(true)
                    .ButtonCount(5)
                    .PageSizes(new[] { 15, 50, 100 }))
                .Scrollable(s => s.Enabled(true).Height("auto"))

                .Columns(columns =>
                {
                    columns.Bound(item => item.Guid).Title("")
                        .ClientTemplate(

                        "# if (CanManage == true) { #"
                        + "<a title='Edit' href='\\#' "
                        + "onclick='showInWindow(\""
                        + "/Location/Edit/"
                        + "#= Guid #/true\",\"Edit Location\");' "
                        + "data-id='#=Guid#'"
                        + ">"
                        + "<i class='material-icons'>edit</i>"
                        + "</a>"

                        + "<a title='Delete' href='\\#' "
                        + "onclick='locationManager.Functions.Delete(\"#=Guid#\",\"Person\",\"#=Name#\");' "
                        + "data-id='#=Guid#'"
                        + ">"
                        + "<i class='material-icons'>delete</i>"
                        + "</a>"

                        + "<a title='View' href='\\#' "
                        + "onclick='showInWindow(\""
                        + "/Location/View/"
                        + "#= Guid #/true\",\"View Location\");' "
                        + "data-id='#=Guid#'"
                        + ">"
                        + "<i class='material-icons'>pageview</i>"
                        + "</a>"

                        + "# } else {#"

                        + "<a title='View' href='\\#' "
                        + "onclick='showInWindow(\""
                        + "/Location/View/"
                        + "#= Guid #/true\",\"View Location\");' "
                        + "data-id='#=Guid#'"
                        + ">"
                        + "<i class='material-icons'>pageview</i>"
                        + "</a>"

                        + "#} #"

                    ).Width(90).Filterable(false);



                    columns.Bound(item => item.Name).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains).ShowOperators(false).Template("kendoHelper.DisableAutocompleteFilter")));
                    columns.Bound(item => item.EL_ID).Filterable(ftb => ftb.Cell(cell => cell.Operator("eq").SuggestionOperator(FilterType.Contains).ShowOperators(false).Template("kendoHelper.DisableAutocompleteFilter"))).Width(140);
                    columns.Bound(item => item.Street).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains).ShowOperators(false).Template("kendoHelper.DisableAutocompleteFilter")));
                    columns.Bound(item => item.City).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains).ShowOperators(false).Template("kendoHelper.DisableAutocompleteFilter"))).Width(250);
                    columns.Bound(item => item.ZipCode).Filterable(ftb => ftb.Cell(cell => cell.Operator("contains").SuggestionOperator(FilterType.Contains).ShowOperators(false).Template("kendoHelper.DisableAutocompleteFilter"))).Width(150);
                    columns.ForeignKey(item => item.CTY_Guid, (List<TextValueModel>)ViewData["CountryNames"], "Value", "Text").Width(220);
    //columns.Bound(item => item.ActiveFromDateOnly).Format("{0:dd.MM.yyyy}").Width(200);
})

            .Editable(editable => editable.Mode(GridEditMode.PopUp).DisplayDeleteConfirmation(false).Window(win => win.Width(700)))
            //.toolbar(tb => tb.Custom().Text("Add Location").Url("#").HtmlAttributes(new { onclick = "showInWindow('/Location/Create/true','Add Location',false);", @class = "kapsch-text-button" }))
            //.toolbar(tb => tb.Custom().Text("Clear Filter").Url("#").HtmlAttributes(new { onclick = "kendoHelper.Grid.ClearFilter('#Grid');", @class = "kapsch-text-button" }))
            .ToolBar(tb =>
            {
                if (Model.CanManage)
                {
                    tb.Custom().Text("Add Location").Url("#").HtmlAttributes(new { onclick = "showInWindow('/Location/Create/true','Add Location',false);", @class = "kapsch-text-button" });
                }
//tb.Custom().Text("Clear Filter").Url("#").HtmlAttributes(new { onclick = "kendoHelper.Grid.ClearFilter('#Grid');", @class = "kapsch-text-button" });
})
        .DataSource(dataSource => dataSource
            .Ajax()
            .ServerOperation(true)
            .Sort(a => a.Add("Name").Ascending())
            .PageSize(15)
            .Model(model => model.Id(item => item.Guid))
            .Read(read => read.Action("Read", "Location"))
            .Events(events => events.Error("exceptionManager.Events.HandleError")
            )
        )
    )


    <script type="text/javascript">
        $(document).ready(function () {
            var url = '@Request.Url';
            kendoHelper.Grid.FilterGrid('#Grid', "Guid", "equals", url);
        });
    </script>
}
