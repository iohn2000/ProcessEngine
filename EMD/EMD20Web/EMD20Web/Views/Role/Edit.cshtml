@model Kapsch.IS.EMD.EMD20Web.Models.RoleModel
@using Kapsch.IS.EMD.EMD20Web.HelperExtensions
@{
    ViewBag.Title = "Edit Orgunit role";
    ViewBag.TooltipUrl = Request.Url.Scheme + "://" + Request.Url.Authority + "/Quickinfo/Role_Edit.html";
}

@Html.Partial("~/Views/Shared/Javascript/_TooltipMetaData.cshtml")

@if (Model.CanManage)
{
    <div id="formcontent" style="">
        @using (Ajax.BeginForm("DoEdit", "Role", null, new AjaxOptions
        {
            HttpMethod = "Post",
            OnBegin = "formValidation.OnBegin(xhr)",
            OnSuccess = "formValidation.OnSuccess(xhr)",
            OnFailure = "formValidation.OnFailure(xhr)"
        }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.Guid)
            @Html.HiddenFor(model => model.Created)
            @Html.HiddenFor(model => model.HistoryGuid)
            @Html.HiddenFor(model => model.Modified)
            @Html.HiddenFor(model => model.ValidFrom)
            @Html.HiddenFor(model => model.ValidTo)
            @Html.HiddenFor(model => model.DescriptionID)
            @Html.HiddenFor(model => model.ID_Parent)
            @Html.HiddenFor(model => model.ID_Root)
            @Html.HiddenFor(model => model.Priority)
            @Html.HiddenFor(model => model.URL_Icon)
            @Html.HiddenFor(model => model.GroupNr)
            @Html.HiddenFor(model => model.ValidFrom)
            @Html.HiddenFor(model => model.ValidTo)
            @Html.HiddenFor(model => model.ActiveFrom)
            @Html.HiddenFor(model => model.ActiveTo)

            var url = "http://localhost:8021/Role/RoleMap/" + Model.Guid;

            <div id="formresults" class="infobox error" style="display:none"></div>

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="k-edit-form-container" style="float:left;">
                    <div class="form-group">
                        @Html.LabelForRequired(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name)
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelForRequired(model => model.R_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.R_ID)
                            @Html.ValidationMessageFor(model => model.R_ID, "", new { @class = "text-danger" })
                        </div>
                        <button type="button" class="btn k-button kapsch-text-button" onclick="role.Events.OnButtonNextRoleIdClick(this)">Get Next ID</button>
                    </div>

                    <div class="form-group">
                        @Html.LabelForRequired(model => model.Key1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Key1)
                            @Html.ValidationMessageFor(model => model.Key1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelForRequired(model => model.Key2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Key2)
                            @Html.ValidationMessageFor(model => model.Key2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelForRequired(model => model.Key3, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Key3)
                            @Html.ValidationMessageFor(model => model.Key3, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelForRequired(model => model.Guid_Parent, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @(Html.Kendo().DropDownListFor(m => m)
                .OptionLabel("Please select")
                .Name("Guid_Parent")
                .DataTextField("Name")
                .DataValueField("Guid")
                .HtmlAttributes(new { @style = "width:300px" })
                .Filter(FilterType.Contains)
                .IgnoreCase(true)
                .BindTo(Model.AvailableRoles)
                            )
                            @Html.ValidationMessageFor(model => model.Guid_Parent, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                                @Html.LabelForRequired(model => model.Guid_Root, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @(Html.Kendo().DropDownListFor(m => m)
                        .OptionLabel("Please select")
                        .Name("Guid_Root")
                        .DataTextField("Name")
                        .DataValueField("Guid")
                        .HtmlAttributes(new { @style = "width:300px" })
                        .Filter(FilterType.Contains)
                        .IgnoreCase(true)
                        .BindTo(Model.AvailableRoles)
                                    )
                                    @Html.ValidationMessageFor(model => model.Guid_Root, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                    <div class="form-group">
                        @Html.LabelForRequired(model => model.IsSecurity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.IsSecurity)
                        </div>
                    </div>

                    <div class="form-group form-group-buttons">
                        <label></label>
                        <div class="col-md-10">
                            <button type="button" value="Cancel" class="k-button kapsch-text-button" onclick="closeWindow();">Cancel</button>
                            <input type="submit" value="Save" class="btn k-button kapsch-text-button" />
                        </div>
                    </div>
                </div>

            </div>
        }
    </div>

    <div style="width:900px;height:800px;float:left;border:none; margin-left: 30px;">
        @Html.Partial("Controls/_RoleMap", Model.roleModelList)
    </div>

    <script type="text/javascript">
        function SubmitForm() {
            var myform = $("form");
            //var formdata = JSON.stringify();
            var formdata = myform.serialize();
            console.log(formdata);

            $.ajax({
                url: "http://localhost:8021/Role/DoEdit",
                type: "POST",
                dataType: "json",
                contentType: "application/json",
                data: formdata,
                //data: form.serialize(),
                success: function (response) {
                    console.log("success");
                    alert('success');
                },
                error: function (response) {
                    //console.log('AJAX-Error' + response.error);
                    console.log('AJAX-Error' + response.error);
                    alert('AJAX-Error');
                    //closeWindow();
                }

            })


            //$.ajax({
            //    cache: false,
            //    async: true,
            //    type: "POST",
            //    url: form.attr('action'),
            //    data: form.serialize(),
            //    success: function (data) {
            //        alert(data);
            //    }
            //});

        }

    </script>

}
